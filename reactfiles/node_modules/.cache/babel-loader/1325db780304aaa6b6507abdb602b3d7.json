{"ast":null,"code":"var _jsxFileName = \"/Users/spencer.jensen/Desktop/BYU Winter 2020/AppDev/sprint4/reactfiles/src/components/pages/Checkout.js\";\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as bs from 'react-bootstrap';\nimport axios from 'axios';\nimport { Formik, Form, Field } from 'formik';\nimport AppContext from '../../context';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nconst stripePromise = loadStripe('pk_test_aht8e7kdTRZm2ugWS8OUmRCh00gvELhJQR');\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      backgroundColor: \"white\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\"\n      }\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\"\n    }\n  }\n};\n\nfunction Checkout(props) {\n  // we'll add Stripe's Elements component here later\n  return React.createElement(\"div\", {\n    sytle: {\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"p-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Checkout\"), React.createElement(Elements, {\n    stripe: stripePromise,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(CheckoutController, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n}\n\nexport default Checkout;\n\nconst CheckoutController = props => {\n  const context = useContext(AppContext);\n  let history = useHistory();\n  const stripe = useStripe();\n  const elements = useElements();\n  return React.createElement(Formik // initialValues={{\n  //     name: 'John Doe',\n  //     address1: '123 BYU Ln',\n  //     address2: '',\n  //     city: 'Provo',\n  //     state: 'UT',\n  //     zipcode: '84606',\n  // }}\n  , {\n    validateOnChange: false,\n    validateOnBlur: false,\n    validate: values => {\n      const errors = {};\n\n      if (values.name === \"\") {\n        errors.name = 'The name is required';\n      }\n\n      if (values.address1 === \"\") {\n        errors.address1 = 'The address is required';\n      }\n\n      if (values.city === \"\") {\n        errors.city = 'The city is required';\n      }\n\n      if (values.state === '') {\n        errors.state = 'The state is required';\n      }\n\n      if (values.zipcode === '') {\n        errors.zipcode = 'The zipcode is required';\n      }\n\n      console.log('validating', values);\n      return errors;\n    },\n    onSubmit: async (values, actions) => {\n      console.log('submit', values); //console.log(values)\n\n      const resp = await axios.post('http://localhost:8000/api/sales/', {\n        name: values.name,\n        address1: values.address1,\n        address2: values.address2,\n        city: values.city,\n        state: values.state,\n        zipcode: values.zipcode,\n        total: (context.cartTotal * 100).toFixed(0),\n        items: context.cart\n      });\n      console.log(resp.data);\n      const result = await stripe.confirmCardPayment(resp.data.client_secret, {\n        payment_method: {\n          card: elements.getElement(CardElement),\n          billing_details: {\n            name: values.name\n          }\n        }\n      });\n      console.log(result);\n\n      if (result.error) {\n        console.log(result.error);\n        alert(result.error.message);\n      } else {\n        context.clearCart();\n        history.push('/receipt');\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, form => React.createElement(PaymentForm, {\n    form: form,\n    st: stripe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }));\n};\n/**\n * The form layout/html.\n */\n\n\nconst PaymentForm = props => React.createElement(Form, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n}, React.createElement(bs.Row, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134\n  },\n  __self: this\n}, React.createElement(bs.Col, {\n  md: 6,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135\n  },\n  __self: this\n}, React.createElement(bs.Table, {\n  borderless: true,\n  size: \"sm\",\n  variant: \"info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n}, React.createElement(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  className: \"m-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137\n  },\n  __self: this\n}, React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137\n  },\n  __self: this\n}, \"Shipping\"))), React.createElement(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  className: \"p-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140\n  },\n  __self: this\n}, React.createElement(Input, {\n  disabled: props.form.isSubmitting,\n  title: \"Name:\",\n  name: \"name\",\n  type: \"text\",\n  placeholder: \"Name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141\n  },\n  __self: this\n}))), React.createElement(\"tr\", {\n  className: \"p-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145\n  },\n  __self: this\n}, React.createElement(Input, {\n  disabled: props.form.isSubmitting,\n  title: \"Address 1:\",\n  name: \"address1\",\n  type: \"text\",\n  placeholder: \"Address1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146\n  },\n  __self: this\n}))), React.createElement(\"tr\", {\n  className: \"p-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150\n  },\n  __self: this\n}, React.createElement(Input, {\n  disabled: props.form.isSubmitting,\n  title: \"Address 2:\",\n  name: \"address2\",\n  type: \"text\",\n  placeholder: \"Address2\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}))), React.createElement(\"tr\", {\n  className: \"p-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155\n  },\n  __self: this\n}, React.createElement(Input, {\n  disabled: props.form.isSubmitting,\n  title: \"City:\",\n  name: \"city\",\n  type: \"text\",\n  placeholder: \"City\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156\n  },\n  __self: this\n}))), React.createElement(\"tr\", {\n  className: \"p-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n}, React.createElement(Input, {\n  disabled: props.form.isSubmitting,\n  title: \"State:\",\n  name: \"state\",\n  type: \"text\",\n  placeholder: \"State\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161\n  },\n  __self: this\n}))), React.createElement(\"tr\", {\n  className: \"p-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 164\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 165\n  },\n  __self: this\n}, React.createElement(Input, {\n  disabled: props.form.isSubmitting,\n  title: \"Zip Code:\",\n  name: \"zipcode\",\n  type: \"text\",\n  placeholder: \"ZipCode\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 166\n  },\n  __self: this\n})))))), React.createElement(bs.Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 172\n  },\n  __self: this\n}, React.createElement(bs.Table, {\n  borderless: true,\n  size: \"sm\",\n  variant: \"info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 173\n  },\n  __self: this\n}, React.createElement(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 174\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  className: \"m-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 174\n  },\n  __self: this\n}, React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 174\n  },\n  __self: this\n}, \"Card Information\"))), React.createElement(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 175\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 176\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 177\n  },\n  __self: this\n}, React.createElement(CardElement, {\n  options: CARD_ELEMENT_OPTIONS,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 178\n  },\n  __self: this\n}))))), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 183\n  },\n  __self: this\n}, \"Order Total: $\", useContext(AppContext).cartTotal.toFixed(2)), React.createElement(bs.Button, {\n  disabled: !props.st,\n  type: \"submit\",\n  variant: \"info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 185\n  },\n  __self: this\n}, props.form.isSubmitting ? React.createElement(\"span\", {\n  className: \"spinner-border spinner-border-sm\",\n  role: \"status\",\n  \"aria-hidden\": \"true\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 186\n  },\n  __self: this\n}) : React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 186\n  },\n  __self: this\n}), \"Submit\"))));\n/**\n * A form input.\n *   props.title - the title that shows above the input box\n *   props.type - the type of input (see React Bootstrap Form.Control)\n *   props.placeholder - placeholder text in the input.\n * This component is finished and doesn't need additional work.\n */\n\n\nconst Input = props => React.createElement(Field, {\n  name: props.name,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 204\n  },\n  __self: this\n}, rProps => React.createElement(bs.Form.Group, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 205\n  },\n  __self: this\n}, React.createElement(bs.Row, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 206\n  },\n  __self: this\n}, React.createElement(bs.Col, {\n  className: \"m-2\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 212\n  },\n  __self: this\n}, React.createElement(bs.Form.Control, Object.assign({\n  type: props.type,\n  placeholder: props.placeholder,\n  disabled: rProps.form.isSubmitting\n}, rProps.field, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 213\n  },\n  __self: this\n})), rProps.meta.touched && rProps.meta.error && React.createElement(\"div\", {\n  className: \"text-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 221\n  },\n  __self: this\n}, rProps.meta.error)))));","map":{"version":3,"sources":["/Users/spencer.jensen/Desktop/BYU Winter 2020/AppDev/sprint4/reactfiles/src/components/pages/Checkout.js"],"names":["React","useContext","useHistory","bs","axios","Formik","Form","Field","AppContext","Elements","CardElement","useStripe","useElements","loadStripe","stripePromise","CARD_ELEMENT_OPTIONS","style","base","color","backgroundColor","fontFamily","fontSmoothing","fontSize","invalid","iconColor","Checkout","props","height","CheckoutController","context","history","stripe","elements","values","errors","name","address1","city","state","zipcode","console","log","actions","resp","post","address2","total","cartTotal","toFixed","items","cart","data","result","confirmCardPayment","client_secret","payment_method","card","getElement","billing_details","error","alert","message","clearCart","push","form","PaymentForm","isSubmitting","st","Input","rProps","type","placeholder","field","meta","touched"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport {useHistory} from 'react-router-dom'\nimport * as bs from 'react-bootstrap'\nimport axios from 'axios'\nimport { Formik, Form, Field} from 'formik'\nimport AppContext from '../../context'\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\nconst stripePromise = loadStripe('pk_test_aht8e7kdTRZm2ugWS8OUmRCh00gvELhJQR')\n\nconst CARD_ELEMENT_OPTIONS = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        backgroundColor: \"white\",\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#aab7c4\",\n        },\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\",\n      },\n    },\n  };\n\nfunction Checkout(props) {\n\n    // we'll add Stripe's Elements component here later\n    return (\n        <div sytle={{height: '100vh'}}>\n            <h1 className=\"p-5\">\n                Checkout\n            </h1>\n            <Elements stripe={stripePromise}>\n                <CheckoutController/>\n            </Elements>\n        </div>\n        \n        \n    )\n}\nexport default Checkout\n\n\nconst CheckoutController = props => {\n    const context = useContext(AppContext);\n    let history = useHistory();\n    const stripe = useStripe();\n    const elements = useElements();\n\n    return (\n        <Formik\n            // initialValues={{\n            //     name: 'John Doe',\n            //     address1: '123 BYU Ln',\n            //     address2: '',\n            //     city: 'Provo',\n            //     state: 'UT',\n            //     zipcode: '84606',\n            // }}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validate={values => {\n                const errors = {}\n                if (values.name === \"\"){\n                    errors.name = 'The name is required'\n                }\n                if (values.address1 === \"\"){\n                    errors.address1 = 'The address is required'\n                }\n                if (values.city === \"\"){\n                    errors.city = 'The city is required'\n                }\n                if (values.state === ''){\n                    errors.state = 'The state is required'\n                }\n                if (values.zipcode === ''){\n                    errors.zipcode = 'The zipcode is required'\n                }\n                console.log('validating', values)\n                return errors\n            }}\n            onSubmit={async (values, actions) => {\n                console.log('submit', values)\n                //console.log(values)\n                const resp = await axios.post('http://localhost:8000/api/sales/', {\n                    name: values.name,\n                    address1: values.address1,\n                    address2: values.address2,\n                    city: values.city,\n                    state: values.state,\n                    zipcode: values.zipcode,\n                    total: (context.cartTotal * 100).toFixed(0),\n                    items: context.cart\n                })\n                console.log(resp.data)\n                const result = await stripe.confirmCardPayment(resp.data.client_secret , {\n                    payment_method: {\n                      card: elements.getElement(CardElement),\n                      billing_details: {\n                        name: values.name,\n                      },\n                    }\n                  });\n                console.log(result)\n                if(result.error){\n                    console.log(result.error)\n                    alert(result.error.message)\n                }\n                else{\n                    context.clearCart();\n                    history.push('/receipt')\n                }\n                \n            }}\n        >{form => (\n            <PaymentForm form={form} st={stripe}/>\n        )}</Formik>\n    )\n}\n\n\n/**\n * The form layout/html.\n */\n\nconst PaymentForm = props => (\n    <Form>\n        <bs.Row>\n            <bs.Col md={6}>\n                <bs.Table borderless size=\"sm\" variant=\"info\">\n                    <thead><tr className=\"m-4\"><th>Shipping</th></tr></thead>\n                    <tbody>\n                        <tr className=\"p-1\">\n                            <td>\n                                <Input disabled={props.form.isSubmitting} title=\"Name:\" name=\"name\" type=\"text\" placeholder=\"Name\"/>\n                            </td>\n                        </tr>\n                        <tr className=\"p-1\">\n                            <td>\n                                <Input disabled={props.form.isSubmitting} title=\"Address 1:\" name=\"address1\" type=\"text\" placeholder=\"Address1\"/>\n                            </td>\n                        </tr>\n                        <tr className=\"p-1\">\n                            <td>\n                                <Input disabled={props.form.isSubmitting} title=\"Address 2:\" name=\"address2\" type=\"text\" placeholder=\"Address2\"/>\n                            </td>\n                        </tr>\n                        <tr className=\"p-1\">\n                            <td>\n                                <Input disabled={props.form.isSubmitting} title=\"City:\" name=\"city\" type=\"text\" placeholder=\"City\"/>\n                            </td>\n                        </tr>\n                        <tr className=\"p-1\">\n                            <td>\n                                <Input disabled={props.form.isSubmitting} title=\"State:\" name=\"state\" type=\"text\" placeholder=\"State\"/>\n                            </td>\n                        </tr>\n                        <tr className=\"p-1\">\n                            <td>\n                                <Input disabled={props.form.isSubmitting} title=\"Zip Code:\" name=\"zipcode\" type=\"text\" placeholder=\"ZipCode\"/>\n                            </td>\n                        </tr>\n                    </tbody>\n                </bs.Table>\n            </bs.Col>\n            <bs.Col>\n                <bs.Table borderless size=\"sm\" variant=\"info\">\n                    <thead><tr className=\"m-4\"><th>Card Information</th></tr></thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <CardElement options={CARD_ELEMENT_OPTIONS} />\n                            </td>\n                        </tr>\n                    </tbody>\n                </bs.Table>\n                <h4>Order Total: ${useContext(AppContext).cartTotal.toFixed(2)}</h4>\n                \n                <bs.Button disabled={!props.st} type=\"submit\" variant=\"info\">\n                    {(props.form.isSubmitting ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : <span></span>)}\n                    Submit\n                </bs.Button>\n            </bs.Col>\n        </bs.Row>\n        \n    </Form>\n)\n\n\n/**\n * A form input.\n *   props.title - the title that shows above the input box\n *   props.type - the type of input (see React Bootstrap Form.Control)\n *   props.placeholder - placeholder text in the input.\n * This component is finished and doesn't need additional work.\n */\nconst Input = (props) => (\n    <Field name={props.name}>{rProps => (\n        <bs.Form.Group>\n            <bs.Row>\n                {/* <bs.Col md={2} style={{alignContent: 'left'}}>\n                    {props.title &&\n                        <bs.Form.Label>{props.title}</bs.Form.Label>\n                    }\n                </bs.Col> */}\n                <bs.Col className=\"m-2\">\n                    <bs.Form.Control\n                        type={props.type}\n                        placeholder={props.placeholder}\n                        disabled={rProps.form.isSubmitting}\n                        {...rProps.field}\n                        //className=\"p-1\"\n                    />\n                    {rProps.meta.touched && rProps.meta.error &&\n                        <div className=\"text-danger\">{rProps.meta.error}</div>\n                    }\n                </bs.Col>\n            </bs.Row>\n        </bs.Form.Group>\n    )}</Field>\n)"]},"metadata":{},"sourceType":"module"}