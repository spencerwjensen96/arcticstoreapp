{"ast":null,"code":"var _jsxFileName = \"/Users/spencer.jensen/Desktop/BYU Winter 2020/AppDev/sprint4/reactfiles/src/components/pages/Checkout.js\";\nimport React, { useContext } from 'react';\nimport * as bs from 'react-bootstrap';\nimport { Formik, Form, Field } from 'formik';\nimport AppContext from '../../context'; // import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n// import { loadStripe } from '@stripe/stripe-js';\n// const stripePromise = loadStripe(...)\n\nfunction Checkout(props) {\n  // we'll add Stripe's Elements component here later\n  return React.createElement(\"div\", {\n    sytle: {\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"p-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Checkout\"), React.createElement(CheckoutController, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n}\n\nexport default Checkout;\n\nconst CheckoutController = props => {\n  const context = useContext(AppContext);\n  const total = context.cartTotal;\n  return React.createElement(Formik, {\n    initialValues: {\n      name: 'Conrad Fox',\n      address1: '1234',\n      address2: '5678',\n      city: 'Provo',\n      state: 'UT',\n      zipcode: '84602'\n    },\n    validateOnChange: false,\n    validateOnBlur: false,\n    validate: values => {\n      const errors = {};\n      console.log('validating', values);\n      return errors;\n    },\n    onSubmit: async (values, actions) => {\n      console.log('submit', values);\n      setTimeout(() => {\n        // wait 2 seconds, then set the form as \"not submitting\"\n        actions.setSubmitting(false);\n      }, 2000);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, form => React.createElement(PaymentForm, {\n    form: form,\n    total: total,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n/**\n * The form layout/html.\n * This component needs finishing.\n */\n\n\nconst PaymentForm = props => React.createElement(Form, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, React.createElement(bs.Row, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, React.createElement(bs.Table, {\n  bordered: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, React.createElement(\"thead\", {\n  className: \"light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, \"Shipping\")), React.createElement(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, React.createElement(Input, {\n  title: \"Name:\",\n  name: \"name\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n})))), React.createElement(bs.Col, {\n  md: 6,\n  className: \"p-3 m-3 border rounded\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, React.createElement(Input, {\n  title: \"Name:\",\n  name: \"name\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}), React.createElement(Input, {\n  title: \"Address 1:\",\n  name: \"address1\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}), React.createElement(Input, {\n  title: \"Address 2:\",\n  name: \"address2\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}), React.createElement(Input, {\n  title: \"City:\",\n  name: \"city\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}), React.createElement(Input, {\n  title: \"State:\",\n  name: \"state\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}), React.createElement(Input, {\n  title: \"Zip Code:\",\n  name: \"zipcode\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n})), React.createElement(bs.Col, {\n  md: 5,\n  className: \"p-3 m-3 border rounded\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, React.createElement(Input, {\n  title: \"Card Information:\",\n  name: \"cardinfo\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n})), React.createElement(bs.Button, {\n  name: \"Submit\",\n  type: \"submit\",\n  variant: \"info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, \"Submit\"))));\n/**\n * A form input.\n *   props.title - the title that shows above the input box\n *   props.type - the type of input (see React Bootstrap Form.Control)\n *   props.placeholder - placeholder text in the input.\n * This component is finished and doesn't need additional work.\n */\n\n\nconst Input = props => React.createElement(Field, {\n  name: props.name,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, rProps => React.createElement(bs.Form.Group, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, React.createElement(bs.Row, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, React.createElement(bs.Col, {\n  md: 3,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}, props.title && React.createElement(bs.Form.Label, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}, props.title)), React.createElement(bs.Col, {\n  md: 9,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}, React.createElement(bs.Form.Control, Object.assign({\n  type: props.type,\n  placeholder: props.placeholder\n}, rProps.field, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n})), rProps.meta.touched && rProps.meta.error && React.createElement(\"div\", {\n  className: \"text-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124\n  },\n  __self: this\n}, rProps.meta.error)))));","map":{"version":3,"sources":["/Users/spencer.jensen/Desktop/BYU Winter 2020/AppDev/sprint4/reactfiles/src/components/pages/Checkout.js"],"names":["React","useContext","bs","Formik","Form","Field","AppContext","Checkout","props","height","CheckoutController","context","total","cartTotal","name","address1","address2","city","state","zipcode","values","errors","console","log","actions","setTimeout","setSubmitting","form","PaymentForm","Input","rProps","title","type","placeholder","field","meta","touched","error"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport * as bs from 'react-bootstrap'\nimport { Formik, Form, Field} from 'formik'\nimport AppContext from '../../context'\n// import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n// import { loadStripe } from '@stripe/stripe-js';\n\n\n// const stripePromise = loadStripe(...)\n\n\nfunction Checkout(props) {\n    // we'll add Stripe's Elements component here later\n    return (\n        <div sytle={{height: '100vh'}}>\n            <h1 className=\"p-5\">\n                Checkout\n            </h1>\n            <CheckoutController />\n        </div>\n        \n        \n    )\n}\nexport default Checkout\n\n\nconst CheckoutController = props => {\n\n    const context = useContext(AppContext)\n\n    const total = context.cartTotal\n\n    return (\n        <Formik\n            initialValues={{\n                name: 'Conrad Fox',\n                address1: '1234',\n                address2: '5678',\n                city: 'Provo',\n                state: 'UT',\n                zipcode: '84602',\n            }}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validate={values => {\n                const errors = {}\n                console.log('validating', values)\n                return errors\n            }}\n            onSubmit={async (values, actions) => {\n                console.log('submit', values)\n                setTimeout(() => {  // wait 2 seconds, then set the form as \"not submitting\"\n                    actions.setSubmitting(false)\n                }, 2000)\n            }}\n        >{form => (\n            <PaymentForm form={form} total={total} />\n        )}</Formik>\n    )\n}\n\n\n/**\n * The form layout/html.\n * This component needs finishing.\n */\nconst PaymentForm = props => (\n    <Form>\n        <bs.Row>\n            <bs.Table bordered >\n                <thead className=\"light\"><tr>Shipping</tr></thead>\n                <tbody>\n                    <tr>\n                        <Input title=\"Name:\" name=\"name\" type=\"text\" />\n                    </tr>\n                </tbody>\n            </bs.Table>\n            <bs.Col md={6} className=\"p-3 m-3 border rounded\">\n                <Input title=\"Name:\" name=\"name\" type=\"text\" />\n                <Input title=\"Address 1:\" name=\"address1\" type=\"text\" />\n                <Input title=\"Address 2:\" name=\"address2\" type=\"text\" />\n                <Input title=\"City:\" name=\"city\" type=\"text\" />\n                <Input title=\"State:\" name=\"state\" type=\"text\" />\n                <Input title=\"Zip Code:\" name=\"zipcode\" type=\"text\" />\n                \n            </bs.Col>\n            <bs.Col md={5} className=\"p-3 m-3 border rounded\">\n                <div>\n                    <Input title=\"Card Information:\" name=\"cardinfo\" type=\"text\"/>\n                </div>\n            \n                <bs.Button name=\"Submit\" type=\"submit\" variant=\"info\">Submit</bs.Button>\n            </bs.Col>\n        </bs.Row>\n        \n    </Form>\n)\n\n\n/**\n * A form input.\n *   props.title - the title that shows above the input box\n *   props.type - the type of input (see React Bootstrap Form.Control)\n *   props.placeholder - placeholder text in the input.\n * This component is finished and doesn't need additional work.\n */\nconst Input = (props) => (\n    <Field name={props.name}>{rProps => (\n        <bs.Form.Group>\n            <bs.Row>\n                <bs.Col md={3}>\n                    {props.title &&\n                        <bs.Form.Label>{props.title}</bs.Form.Label>\n                    }\n                </bs.Col>\n                <bs.Col md={9}>\n                    <bs.Form.Control\n                        type={props.type}\n                        placeholder={props.placeholder}\n                        {...rProps.field}\n                    />\n                    {rProps.meta.touched && rProps.meta.error &&\n                        <div className=\"text-danger\">{rProps.meta.error}</div>\n                    }\n                </bs.Col>\n            </bs.Row>\n        </bs.Form.Group>\n    )}</Field>\n)"]},"metadata":{},"sourceType":"module"}