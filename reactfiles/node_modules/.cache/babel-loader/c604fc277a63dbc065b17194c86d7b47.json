{"ast":null,"code":"var _jsxFileName = \"/Users/spencer.jensen/Desktop/BYU Winter 2020/AppDev/sprint4/reactfiles/src/components/pages/Cart.js\";\nimport React, { useContext } from 'react';\nimport { Table, Image, Button, Col, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../../context';\nexport default function Cart(props) {\n  const context = useContext(AppContext);\n  let ProdArray = Object.values(context.products); //console.log(context)\n  //console.log(context.cart)\n\n  ProdArray = ProdArray.filter(p => {\n    return p.id in context.cart;\n  }); //console.log(ProdArray)\n  //console.log(context.cart.length)\n\n  if (Object.entries(context.cart).length === 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"There is nothing in your cart!\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Start shopping!\"), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Browse Products\")));\n  }\n\n  let total = 0;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"p-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Cart\"), React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Product\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Total\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, ProdArray.map(p => {\n    let cnt = 0;\n\n    for (let i of Object.entries(context.cart)) {\n      if (p.id.toString() === i[0]) {\n        cnt = i[1];\n      }\n    }\n\n    ;\n    let subtotal = p.price * cnt;\n    total += subtotal;\n    return React.createElement(\"tr\", {\n      id: p.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Image, {\n      id: p.id,\n      style: {\n        height: '3rem'\n      },\n      src: \"/media/products/\" + p.filename + \"-1.png\",\n      fluid: true,\n      rounded: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, p.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, p.price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, cnt), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, subtotal.toFixed(2)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: p.name,\n      variant: \"warning\",\n      onClick: () => context.removeFromCart(p.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Remove\")));\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Col, {\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Total: \", total.toFixed(2)))));\n}","map":{"version":3,"sources":["/Users/spencer.jensen/Desktop/BYU Winter 2020/AppDev/sprint4/reactfiles/src/components/pages/Cart.js"],"names":["React","useContext","Table","Image","Button","Col","Row","Link","AppContext","Cart","props","context","ProdArray","Object","values","products","filter","p","id","cart","entries","length","total","map","cnt","i","toString","subtotal","price","height","filename","name","toFixed","removeFromCart"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport {Table, Image, Button, Col, Row} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport AppContext from '../../context'\n\nexport default function Cart(props) {\n    \n    const context = useContext(AppContext)\n\n    let ProdArray = Object.values(context.products)\n    //console.log(context)\n    //console.log(context.cart)\n    ProdArray = ProdArray.filter(p =>{\n        return p.id in context.cart\n    })\n    //console.log(ProdArray)\n    //console.log(context.cart.length)\n    if(Object.entries(context.cart).length === 0){\n        return(\n            <div>\n                <br></br>\n                <br></br>\n                <br></br>\n                <h1>There is nothing in your cart!</h1>\n                <h3>Start shopping!</h3>\n                <Link to=\"/\">\n                    <Button variant=\"info\">\n                        Browse Products\n                    </Button>\n                </Link>\n            </div>\n        )\n    }\n\n    let total = 0;\n\n    return(\n        <div>\n            <h1 className=\"p-4\">Cart</h1>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>Product</th>\n                        <th>Price</th>\n                        <th>Quantity</th>\n                        <th>Total</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {ProdArray.map((p) => {\n                        let cnt = 0;\n                        \n                        for (let i of Object.entries(context.cart)){\n                            if(p.id.toString() === i[0]){\n                                cnt = i[1];\n                            }\n                        };\n                        \n                        let subtotal = p.price * cnt;\n                        total += subtotal;\n\n                        return(\n                            <tr id={p.id}>\n                                <td>\n                                    <Image id={p.id} style={{height: '3rem'}} src={\"/media/products/\" + p.filename + \"-1.png\"} fluid rounded/>\n                                </td>\n                                <td>{p.name}</td>\n                                <td>{p.price}</td>\n                                <td>{cnt}</td>\n                                <td>{subtotal.toFixed(2)}</td>\n                                <td>\n                                    <Button \n                                        id={p.name}\n                                        variant=\"warning\" \n                                        onClick={() => context.removeFromCart(p.id)}>\n                                        Remove\n                                    </Button>\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n                \n            </Table>\n            <Row>\n                <Col xs={9}></Col>\n                <Col xs={3}><h1>Total: {total.toFixed(2)}</h1></Col>\n            </Row>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}