{"ast":null,"code":"import _objectSpread from \"/Users/spencer.jensen/Desktop/BYU Winter 2020/AppDev/sprint4/reactfiles/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/spencer.jensen/Desktop/BYU Winter 2020/AppDev/sprint4/reactfiles/src/context-provider.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport AppContext from './context';\nimport App from './App';\nimport produce from 'immer';\n/** The context provider for our app */\n\nexport default class AppProvider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.removeFromCart = id => {\n      this.setState(state => produce(state, draft => {\n        if (draft.cart[id]) {\n          draft.cartCount -= draft.cart[id];\n          delete draft.cart[id];\n        } // draft.cartCount = 0;\n        // for(let q in Object.values(draft.cart)){\n        //     draft.cartCount += q;\n        // }\n\n      }));\n    };\n\n    this.addToCart = id => {\n      this.setState(state => produce(state, draft => {\n        //console.log(state.cart);\n        if (!draft.cart[id]) {\n          draft.cart[id] = 1;\n          draft.cartCount += 1; //console.log('added product to cart')\n        } else {\n          draft.cart[id] += 1;\n          draft.cartCount += 1; //console.log('added 1 to quantity')\n        }\n      })); //console.log(this.state.cart)\n    };\n\n    this.actions = {\n      addToCart: this.addToCart,\n      removeFromCart: this.removeFromCart\n    };\n    this.state = {\n      categories: {},\n      products: {},\n      cart: {},\n      cartCount: 0,\n      cartTotal: 0\n    };\n  }\n\n  render() {\n    return React.createElement(AppContext.Provider, {\n      value: _objectSpread({}, this.state, {}, this.actions),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(App, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n  async componentDidMount() {\n    const resp = await axios.get('http://localhost:8000/api/category');\n    const resp2 = await axios.get('http://localhost:8000/api/product');\n    this.setState({\n      categories: resp.data\n    });\n    this.setState({\n      products: resp2.data\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/spencer.jensen/Desktop/BYU Winter 2020/AppDev/sprint4/reactfiles/src/context-provider.js"],"names":["React","axios","AppContext","App","produce","AppProvider","Component","constructor","props","removeFromCart","id","setState","state","draft","cart","cartCount","addToCart","actions","categories","products","cartTotal","render","componentDidMount","resp","get","resp2","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,OAAP,MAAoB,OAApB;AAEA;;AACA,eAAe,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AAErDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,cAhBmB,GAgBDC,EAAD,IAAQ;AACrB,WAAKC,QAAL,CAAcC,KAAK,IAAIR,OAAO,CAACQ,KAAD,EAAQC,KAAK,IAAI;AAC3C,YAAGA,KAAK,CAACC,IAAN,CAAWJ,EAAX,CAAH,EAAkB;AAEdG,UAAAA,KAAK,CAACE,SAAN,IAAmBF,KAAK,CAACC,IAAN,CAAWJ,EAAX,CAAnB;AACA,iBAAOG,KAAK,CAACC,IAAN,CAAWJ,EAAX,CAAP;AAEH,SAN0C,CAO3C;AACA;AACA;AACA;;AACH,OAX6B,CAA9B;AAYH,KA7BkB;;AAAA,SA+BnBM,SA/BmB,GA+BNN,EAAD,IAAQ;AAChB,WAAKC,QAAL,CAAcC,KAAK,IAAIR,OAAO,CAAEQ,KAAF,EAASC,KAAK,IAAI;AAC5C;AACA,YAAG,CAACA,KAAK,CAACC,IAAN,CAAWJ,EAAX,CAAJ,EAAmB;AACfG,UAAAA,KAAK,CAACC,IAAN,CAAWJ,EAAX,IAAiB,CAAjB;AACAG,UAAAA,KAAK,CAACE,SAAN,IAAmB,CAAnB,CAFe,CAGf;AACH,SAJD,MAKI;AACAF,UAAAA,KAAK,CAACC,IAAN,CAAWJ,EAAX,KAAkB,CAAlB;AACAG,UAAAA,KAAK,CAACE,SAAN,IAAmB,CAAnB,CAFA,CAGA;AACH;AAEJ,OAb6B,CAA9B,EADgB,CAehB;AACH,KA/CkB;;AAGf,SAAKE,OAAL,GAAe;AACXD,MAAAA,SAAS,EAAE,KAAKA,SADL;AAEXP,MAAAA,cAAc,EAAE,KAAKA;AAFV,KAAf;AAIA,SAAKG,KAAL,GAAa;AACTM,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTL,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,SAAS,EAAE,CAJF;AAKTK,MAAAA,SAAS,EAAE;AALF,KAAb;AAOH;;AAmCDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,oBAAM,KAAKT,KAAX,MAAqB,KAAKK,OAA1B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAED,QAAMK,iBAAN,GAA0B;AACtB,UAAMC,IAAI,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAU,oCAAV,CAAnB;AACA,UAAMC,KAAK,GAAG,MAAMxB,KAAK,CAACuB,GAAN,CAAU,mCAAV,CAApB;AAEA,SAAKb,QAAL,CAAc;AAACO,MAAAA,UAAU,EAAEK,IAAI,CAACG;AAAlB,KAAd;AACA,SAAKf,QAAL,CAAc;AAACQ,MAAAA,QAAQ,EAAEM,KAAK,CAACC;AAAjB,KAAd;AACH;;AAjEoD","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport AppContext from './context'\nimport App from './App'\nimport produce from 'immer'\n\n/** The context provider for our app */\nexport default class AppProvider extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.actions = {\n            addToCart: this.addToCart,\n            removeFromCart: this.removeFromCart\n        }\n        this.state = {\n            categories: {},\n            products: {},\n            cart: {},\n            cartCount: 0,\n            cartTotal: 0,\n        }\n    }\n\n    removeFromCart = (id) => {\n        this.setState(state => produce(state, draft => {\n            if(draft.cart[id]){\n\n                draft.cartCount -= draft.cart[id];\n                delete draft.cart[id];\n\n            }\n            // draft.cartCount = 0;\n            // for(let q in Object.values(draft.cart)){\n            //     draft.cartCount += q;\n            // }\n        }))\n    }\n\n    addToCart = (id) => {\n        this.setState(state => produce( state, draft => {\n            //console.log(state.cart);\n            if(!draft.cart[id]){\n                draft.cart[id] = 1\n                draft.cartCount += 1\n                //console.log('added product to cart')\n            }\n            else{\n                draft.cart[id] += 1\n                draft.cartCount += 1\n                //console.log('added 1 to quantity')\n            }\n            \n        }))\n        //console.log(this.state.cart)\n    }\n\n    render() {\n        return (\n            <AppContext.Provider value={{...this.state, ...this.actions}}>\n                <App />\n            </AppContext.Provider>\n        )\n    }\n\n    async componentDidMount() {\n        const resp = await axios.get('http://localhost:8000/api/category')\n        const resp2 = await axios.get('http://localhost:8000/api/product')\n        \n        this.setState({categories: resp.data})\n        this.setState({products: resp2.data})\n    }\n\n}"]},"metadata":{},"sourceType":"module"}