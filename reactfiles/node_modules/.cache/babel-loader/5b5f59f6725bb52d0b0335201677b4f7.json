{"ast":null,"code":"var _jsxFileName = \"/Users/spencer.jensen/Desktop/BYU Winter 2020/AppDev/northwestlabs/src/components/Left.js\";\nimport React, { useContext } from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'; //import PRODUCTS from '../products';\n\nimport AppContext from '../context';\nexport default function Left(props) {\n  const state = useContext(AppContext);\n  const categories = {};\n\n  for (let p of Object.values(state.products)) {\n    if (p.category in state.categories.id) {\n      categories[p.category].count = categories[p.category].count + 1;\n    } else {\n      categories[p.category].count = 1;\n    }\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    defaultActiveKey: \"/home\",\n    className: \"flex-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"nav-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"All Products (\", Object.values(state.products).length, \")\"), React.createElement(Nav.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, Object.entries(state.categories).map(c => React.createElement(Link, {\n    to: '/category/' + c[1].title,\n    key: c[0],\n    className: \"nav-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, c[1].title, \" (\", c[1].count, \")\", console.log(c))))));\n}\n;","map":{"version":3,"sources":["/Users/spencer.jensen/Desktop/BYU Winter 2020/AppDev/northwestlabs/src/components/Left.js"],"names":["React","useContext","Nav","Link","AppContext","Left","props","state","categories","p","Object","values","products","category","id","count","length","entries","map","c","title","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAIA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAEjC,QAAMC,KAAK,GAAGN,UAAU,CAACG,UAAD,CAAxB;AAEA,QAAMI,UAAU,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAT,IAAcC,MAAM,CAACC,MAAP,CAAcJ,KAAK,CAACK,QAApB,CAAd,EAA4C;AAC1C,QAAGH,CAAC,CAACI,QAAF,IAAcN,KAAK,CAACC,UAAN,CAAiBM,EAAlC,EAAqC;AACnCN,MAAAA,UAAU,CAACC,CAAC,CAACI,QAAH,CAAV,CAAuBE,KAAvB,GAA+BP,UAAU,CAACC,CAAC,CAACI,QAAH,CAAV,CAAuBE,KAAvB,GAA+B,CAA9D;AACD,KAFD,MAGI;AACFP,MAAAA,UAAU,CAACC,CAAC,CAACI,QAAH,CAAV,CAAuBE,KAAvB,GAA+B,CAA/B;AACD;AACF;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,gBAAgB,EAAC,OAAtB;AAA8B,IAAA,SAAS,EAAC,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBL,MAAM,CAACC,MAAP,CAAcJ,KAAK,CAACK,QAApB,EAA8BI,MAD/C,MADF,EAIE,oBAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,MAAM,CAACO,OAAP,CAAeV,KAAK,CAACC,UAArB,EAAiCU,GAAjC,CAAsCC,CAAC,IACpC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,eAAeA,CAAC,CAAC,CAAD,CAAD,CAAKC,KAA9B;AAAqC,IAAA,GAAG,EAAED,CAAC,CAAC,CAAD,CAA3C;AAAgD,IAAA,SAAS,EAAC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,CAAC,CAAC,CAAD,CAAD,CAAKC,KADV,QACmBD,CAAC,CAAC,CAAD,CAAD,CAAKJ,KADxB,OAEGM,OAAO,CAACC,GAAR,CAAYH,CAAZ,CAFH,CADH,CADH,CAJF,CADF,CADF;AAkBD;AAAA","sourcesContent":["import React, { useContext } from 'react'\nimport {Nav} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n//import PRODUCTS from '../products';\nimport AppContext from '../context'\n\n      \n\nexport default function Left(props){\n  \n  const state = useContext(AppContext)\n\n  const categories = {}\n  for (let p of Object.values(state.products)){\n    if(p.category in state.categories.id){\n      categories[p.category].count = categories[p.category].count + 1\n    }\n    else{\n      categories[p.category].count = 1\n    }\n  }\n  return(\n    <div> \n      <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\n        <Link to=\"/\" className=\"nav-link\">\n          All Products ({Object.values(state.products).length})\n        </Link>\n        <Nav.Item>\n          {Object.entries(state.categories).map((c => (\n              <Link to={'/category/' + c[1].title} key={c[0]} className=\"nav-link\">\n                  {c[1].title} ({c[1].count})\n                {console.log(c)}\n              </Link>\n          )))}\n        </Nav.Item>\n      </Nav>\n    </div>\n  )\n\n};"]},"metadata":{},"sourceType":"module"}